{"version":3,"sources":["api/api.js","api/characters.js","components/DetailsCharacter/DetailsCharacters.jsx","components/Loader/Loader.js","components/CharactersList/CharactersList.jsx","App.js","index.js"],"names":["getData","endPoint","a","fetch","response","ok","Error","status","statusText","json","result","getPlanets","url","getCharacters","then","allCharacters","results","next","nextPage","slice","DetailsCharacters","selectedCharacter","clearSelectCharacter","correctedUrl","useState","character","setCharacter","UpdateCharacter","Promise","all","films","map","film","objFilms","vehicles","vehicle","objVehicles","updatedCharacter","useEffect","className","type","onClick","to","name","height","mass","hair_color","skin_color","eye_color","birth_year","gender","homeworld","title","length","model","LoaderExampleText","Segment","Dimmer","active","Loader","Image","src","CharactersList","characters","setCharacters","searchName","setSearchName","setSelectedCharacter","preparedCharacters","setPreparedCharacters","loader","setLoader","loadCharacters","charactersFromServer","replace","UpdateCharacters","updateCharacters","placeholder","value","onChange","target","filter","includes","path","find","App","FB","getLoginStatus","logout","console","log","location","href","exact","appId","autoLoad","fields","callback","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.15d844c5.chunk.js","sourcesContent":["export const BASE_URL = 'https://swapi.dev/api/';\n\nexport const getData = async(endPoint) => {\n  const response = await fetch(`${BASE_URL}${endPoint}`);\n  if (!response.ok) {\n    throw new Error(`${response.status} - ${response.statusText}`);\n  }\n\n  const result = await response.json();\n\n  return result;\n};\n\nexport const getPlanets = async(url) => {\n  const response = await fetch(url);\n  if (!response.ok) {\n    throw new Error(`${response.status} - ${response.statusText}`);\n  }\n\n  const result = await response.json();\n  \n  return result;\n};","import { getData } from './api';\n\nexport const getCharacters = async() => {\n  let result = await getData('people/?page=1').then(response => response);\n  let allCharacters = [...result.results];\n\n  while(result.next !== null) {\n    const nextPage = result.next.slice(21);\n    result = await getData(nextPage).then(result => result);\n    allCharacters = [\n      ...allCharacters,\n      ...result.results\n    ]\n  }\n  return allCharacters;\n}\n\n\nexport const getHomeWorld = async(id) => {\n  const endPoint = id.slice(21);\n  const result = await getData(endPoint);\n\n  return result;\n}\n\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { getPlanets } from '../../api/api';\nimport PropTypes from 'prop-types';\n\nimport './DetailsCharacters.css'\n\nexport const DetailsCharacters = ({ \n  selectedCharacter, \n  clearSelectCharacter, \n  correctedUrl\n}) => {\n  \n  const [character, setCharacter] = useState([]);\n  \n  const UpdateCharacter = async() => {\n    const films = await Promise.all(selectedCharacter.films\n      .map(async film => {\n        const objFilms = await getPlanets(correctedUrl(film));\n        return {\n          ...objFilms\n        };    \n      }));\n    const vehicles = await Promise.all(selectedCharacter.vehicles\n      .map(async vehicle => {\n        const objVehicles = await getPlanets(correctedUrl(vehicle));\n        return {\n          ...objVehicles\n        };    \n      }));\n    \n    const updatedCharacter = {\n      ...selectedCharacter,\n      films,\n      vehicles\n    }\n    setCharacter(updatedCharacter);\n  };\n\n\n\n  useEffect(() => {\n    if(selectedCharacter !== '') {\n      UpdateCharacter();\n    }\n  }, [selectedCharacter]);\n\n\n  return (\n      <div className=\"DetailsCharacters\">\n        <h2>Details:</h2>\n        <Link\n          className=\"btn btn__close\"\n          type=\"button\"\n          onClick={clearSelectCharacter}\n          to=\"/star_wars/characters\"\n        >\n          X\n        </Link>\n        {character !== [] \n          && (\n            <>\n              <div className=\"DetailsCharacters__info\">\n              {`Name: ${selectedCharacter.name}`}\n              </div>\n              <div className=\"DetailsCharacters__info\">\n                {`Height: ${selectedCharacter.height}`}\n              </div>\n              <div className=\"DetailsCharacters__info\">\n                {`Mass: ${selectedCharacter.mass}`}\n              </div>\n              <div className=\"DetailsCharacters__info\">\n                {`Hair color: ${selectedCharacter.hair_color}`}\n              </div>\n              <div className=\"DetailsCharacters__info\">\n                {`Skin color: ${selectedCharacter.skin_color}`}\n              </div>\n              <div className=\"DetailsCharacters__info\">\n                {`Eye color: ${selectedCharacter.eye_color}`}\n              </div>\n              <div className=\"DetailsCharacters__info\">\n                {`Birth year: ${selectedCharacter.birth_year}`}\n              </div>\n              <div className=\"DetailsCharacters__info\">\n                {`Gender: ${selectedCharacter.gender}`}\n              </div>\n              <div className=\"DetailsCharacters__info\">\n                {`Home World: ${selectedCharacter.homeworld.name}`}\n              </div>\n              <div className=\"DetailsCharacters__info\">\n                {`Films: `}\n                {character.films \n                  ? \n                    character.films.map(film => (\n                      <div key={film.title}> \n                        {`${film.title}`}\n                      </div>\n                    ))\n                  \n                  : (\n                    <div>\n                      {`Loading`}\n                    </div>\n                  )}\n              </div>\n              <div className=\"DetailsCharacters__info\">\n                {selectedCharacter.vehicles.length > 0 && <span>Vehicles:</span>}\n                {character.vehicles\n                  ? (\n                    character.vehicles.map(vehicle => {\n                      return (\n                        <div key={vehicle.name}> \n                          {`${vehicle.name} - ${vehicle.model}`}\n                        </div>\n                      )\n                    })\n                  )\n                  : (\n                    <span>\n                      {`Loading`}\n                    </span>\n                  ) }\n              </div>\n            </>\n        )}\n      </div>\n    );\n};\n\nDetailsCharacters.propTypes = {\n  selectedCharacter: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n  }),\n  clearSelectCharacter: PropTypes.func.isRequired,\n  correctedUrl: PropTypes.func.isRequired,\n}","import React from 'react'\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\n\nexport const LoaderExampleText = () => (\n  <div>\n    <Segment>\n      <Dimmer active>\n        <Loader>Loading</Loader>\n      </Dimmer>\n\n      <Image src='https://react.semantic-ui.com/images/wireframe/short-paragraph.png' />\n    </Segment>\n  </div>\n)\n\n","import React, { useEffect, useState } from 'react';\nimport { Link, Route } from 'react-router-dom';\n\nimport { getCharacters } from '../../api/characters';\nimport { getPlanets } from '../../api/api';\n\nimport { DetailsCharacters } from '../DetailsCharacter/DetailsCharacters';\nimport { LoaderExampleText } from '../Loader';\n\nimport 'semantic-ui-css/semantic.min.css';\nimport './CharactersList.css';\n\nexport const CharactersList = () => {\n  const [characters, setCharacters] = useState([]);\n  const [searchName, setSearchName] = useState('');\n  const [selectedCharacter, setSelectedCharacter] = useState('');\n  const [preparedCharacters, setPreparedCharacters] = useState([]);\n  const [loader, setLoader] = useState(false);\n\n  const loadCharacters = async() => {\n    setLoader(true);\n    const charactersFromServer = await getCharacters();\n\n    setCharacters(charactersFromServer);\n    setLoader(false);\n  };\n\n  const correctedUrl = url => url.replace('http', 'https');\n\n  const UpdateCharacters = async() => {\n    setLoader(true);\n    const updateCharacters = await Promise.all(characters\n      .map(async character => {\n        const homeworld = await getPlanets(correctedUrl(character.homeworld));\n        return {\n          ...character, \n          homeworld\n        };    \n      }));\n    setPreparedCharacters(updateCharacters);\n    setLoader(false);\n  };\n\n  const clearSelectCharacter = () => setSelectedCharacter({});\n\n  useEffect(() => {\n    loadCharacters();\n  }, []);\n\n  useEffect(() => {\n    UpdateCharacters();\n  }, [characters]);\n\n  return (\n    <div className=\"CharactersList\">\n      <input\n        type=\"text\"\n        className=\"search\"\n        placeholder=\"Input character name\"\n        value={searchName}\n        onChange={({target}) => setSearchName(target.value)}\n      >\n      </input>\n      <h2 className=\"CharactersList__title\">Characters:</h2>\n      {loader \n        ? <LoaderExampleText />\n        : (\n          <ul className=\"CharactersList__list\">\n            {preparedCharacters.filter(character => character.name.includes(searchName))\n              .map(({name, gender, homeworld, url}) => {\n                return (\n                <li\n                  key={url}\n                  className=\"CharactersList__item\"\n                >\n                  <div>\n                    {`Name: ${name}`}\n                  </div>\n                  <div>\n                    {`Gender: ${gender}`}\n                  </div>\n                  <div>\n                    {`Home World: ${homeworld.name}`}\n                  </div>\n                  <Link\n                    className=\"btn\"\n                    to={`/star_wars/characters/${name}`}\n                    name={name}\n                    onClick={({ target }) => {\n                      setSelectedCharacter(target.name)\n                    }}\n                  >\n                    Show Details\n                  </Link>\n                </li>\n            )})}\n          </ul>\n        )}\n      <Route path={`/star_wars/characters/${selectedCharacter}`}>\n        {selectedCharacter \n          && <DetailsCharacters\n            selectedCharacter={preparedCharacters.find(character => character.name === selectedCharacter)}\n            clearSelectCharacter={clearSelectCharacter}\n            correctedUrl={correctedUrl}\n          />}\n      </Route>\n\n    </div>\n  );\n};\n","import { Link, Route } from 'react-router-dom';\nimport FacebookLogin from 'react-facebook-login';\n\nimport { CharactersList } from './components/CharactersList';\n\nimport './App.css';\n\n\n\nconst App = () => {\n  function fbLogoutUser() {\n    //eslint-disable-next-line\n    FB.getLoginStatus(function(response) {\n        if (response && response.status === 'connected') {\n            //eslint-disable-next-line\n            FB.logout(function(response) {\n              console.log('bye')\n              // eslint-disable-next-line no-restricted-globals\n              location.href = \"/star_wars/\";\n            });\n        }\n    });\n  }\n\n  function redirect (){\n    //eslint-disable-next-line\n    FB.getLoginStatus(function(response) {\n      if (response && response.status === 'connected') {\n        // eslint-disable-next-line no-restricted-globals\n        location.href = \"/star_wars/#/home/\";\n      }\n  });\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n          <Route path=\"/home\">\n            <button \n              className=\"btn\"\n              onClick={fbLogoutUser}\n            >\n              Log out\n            </button>\n            <h1 className=\"main_title\">Star Wars</h1>\n            <nav className=\"menu\">\n              <ul>\n                <li>\n                  <Link \n                    to=\"/characters\"\n                    className=\"btn\"\n                  >\n                    Characters\n                  </Link>\n                </li>\n              </ul>\n            </nav>\n          </Route>\n          <Route path=\"/characters\">\n            <CharactersList/>\n          </Route>\n          <Route path=\"/\" exact>\n          <FacebookLogin\n            appId=\"856885485186770\"\n            autoLoad={true}\n            fields=\"name,email,picture\"\n            callback={redirect} \n          />\n          </Route>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {HashRouter } from 'react-router-dom'\n\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}