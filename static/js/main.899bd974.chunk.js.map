{"version":3,"sources":["api/api.js","api/characters.js","components/DetailsCharacter/DetailsCharacters.jsx","components/Loader/Loader.js","components/CharactersList/CharactersList.jsx","App.js","index.js"],"names":["getData","endPoint","a","fetch","response","ok","Error","status","statusText","json","result","getInfo","url","getCharacters","then","allCharacters","results","next","nextPage","slice","DetailsCharacters","selectedCharacter","useState","character","setCharacter","UpdateCharacter","Promise","all","films","map","film","objFilms","vehicles","vehicle","objVehicles","updatedCharacter","useEffect","className","type","to","name","height","mass","hair_color","skin_color","eye_color","birth_year","gender","homeworld","title","length","model","LoaderExampleText","Segment","Dimmer","active","Loader","Image","src","CharactersList","match","useLocalStorage","key","initialValue","JSON","parse","localStorage","getItem","characters","setCharacters","value","setItem","stringify","searchName","setSearchName","preparedCharacters","setPreparedCharacters","loader","setLoader","characterName","params","loadCharacters","charactersFromServer","UpdateCharacters","updateCharacters","placeholder","onChange","target","filter","toLowerCase","includes","path","find","App","onClick","FB","getLoginStatus","logout","console","log","location","href","component","exact","appId","autoLoad","fields","callback","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.899bd974.chunk.js","sourcesContent":["export const BASE_URL = 'https://swapi.dev/api/';\n\nexport const getData = async(endPoint) => {\n  const response = await fetch(`${BASE_URL}${endPoint}`);\n  if (!response.ok) {\n    throw new Error(`${response.status} - ${response.statusText}`);\n  }\n\n  const result = await response.json();\n\n  return result;\n};\n\nexport const getInfo = async(url) => {\n  const response = await fetch(url);\n  if (!response.ok) {\n    throw new Error(`${response.status} - ${response.statusText}`);\n  }\n\n  const result = await response.json();\n  \n  return result;\n};","import { getData } from './api';\n\nexport const getCharacters = async() => {\n  let result = await getData('people/?page=1').then(response => response);\n  let allCharacters = [...result.results];\n\n  while(result.next !== null) {\n    const nextPage = result.next.slice(21);\n    result = await getData(nextPage).then(result => result);\n    allCharacters = [\n      ...allCharacters,\n      ...result.results\n    ]\n  }\n  return allCharacters;\n}\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { getInfo } from '../../api/api';\nimport PropTypes from 'prop-types';\n\nimport './DetailsCharacters.css'\n\nexport const DetailsCharacters = ({ \n  selectedCharacter, \n}) => {\n  \n  const [character, setCharacter] = useState([]);\n  \n  const UpdateCharacter = async() => {\n    if(selectedCharacter !== []) {\n      const films = await Promise.all(selectedCharacter.films\n        .map(async film => {\n          const objFilms = await getInfo(film);\n          return {\n            ...objFilms\n          };    \n        }));\n      const vehicles = await Promise.all(selectedCharacter.vehicles\n        .map(async vehicle => {\n          const objVehicles = await getInfo(vehicle);\n          return {\n            ...objVehicles\n          };    \n        }));\n      \n      const updatedCharacter = {\n        ...selectedCharacter,\n        films,\n        vehicles\n      }\n      setCharacter(updatedCharacter);\n    }\n  };\n\n\n\n  useEffect(() => {\n    if(selectedCharacter) {\n      UpdateCharacter();\n    }\n  }, [selectedCharacter]);\n\n\n  return (\n    <div className=\"DetailsCharacters\">\n              <h2>Details:</h2>\n              <Link\n                className=\"btn btn__close\"\n                type=\"button\"\n                to=\"/characters\"\n              >\n                X\n              </Link>\n      {character.name ? (\n          <>\n            <div className=\"DetailsCharacters__info\">\n              {`Name: ${character.name}`}\n            </div>\n            <div className=\"DetailsCharacters__info\">\n              {`Height: ${character.height}`}\n            </div>\n            <div className=\"DetailsCharacters__info\">\n              {`Mass: ${character.mass}`}\n            </div>\n            <div className=\"DetailsCharacters__info\">\n              {`Hair color: ${character.hair_color}`}\n            </div>\n            <div className=\"DetailsCharacters__info\">\n              {`Skin color: ${character.skin_color}`}\n            </div>\n            <div className=\"DetailsCharacters__info\">\n              {`Eye color: ${character.eye_color}`}\n            </div>\n            <div className=\"DetailsCharacters__info\">\n              {`Birth year: ${character.birth_year}`}\n            </div>\n            <div className=\"DetailsCharacters__info\">\n              {`Gender: ${character.gender}`}\n            </div>\n            <div className=\"DetailsCharacters__info\">\n              {`Home World: ${selectedCharacter.homeworld.name}`}\n            </div>\n            <div className=\"DetailsCharacters__info\">\n              {`Films: `}\n              {character.films \n                ? \n                  character.films.map(film => (\n                    <div key={film.title}> \n                      {`${film.title}`}\n                    </div>\n                  ))\n                \n                : (\n                  <div>\n                    {`Loading`}\n                  </div>\n                )}\n            </div>\n            <div className=\"DetailsCharacters__info\">\n              {selectedCharacter.vehicles.length > 0 && <span>Vehicles:</span>}\n              {character.vehicles\n                ? (\n                  character.vehicles.map(vehicle => {\n                    return (\n                      <div key={vehicle.name}> \n                        {`${vehicle.name} - ${vehicle.model}`}\n                      </div>\n                    )\n                  })\n                )\n                : (\n                  <span>\n                    {`Loading`}\n                  </span>\n                ) }\n            </div>\n          </>\n        )\n        : <div>\n            Loading\n        </div>\n      }\n    </div>\n  );\n};\n\nDetailsCharacters.propTypes = {\n  selectedCharacter: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n  }),\n}","import React from 'react'\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\n\nexport const LoaderExampleText = () => (\n  <div>\n    <Segment>\n      <Dimmer active>\n        <Loader>Loading</Loader>\n      </Dimmer>\n\n      <Image src='https://react.semantic-ui.com/images/wireframe/short-paragraph.png' />\n    </Segment>\n  </div>\n)\n\n","import React, { useEffect, useState } from 'react';\nimport { Link, Route } from 'react-router-dom';\n\nimport { getCharacters } from '../../api/characters';\nimport { getInfo } from '../../api/api';\n\nimport { DetailsCharacters } from '../DetailsCharacter/DetailsCharacters';\nimport { LoaderExampleText } from '../Loader';\n\nimport 'semantic-ui-css/semantic.min.css';\nimport './CharactersList.css';\n\nexport const CharactersList = ({match}) => {\n  const useLocalStorage = (key, initialValue) => {\n    const [characters, setCharacters] = useState (\n      JSON.parse(localStorage.getItem(key)) || initialValue,\n    );\n\n    const save = (value) => {\n      setCharacters(value);\n      localStorage.setItem(key, JSON.stringify(value));\n    };\n\n    return [ characters, save ]\n  }\n\n  const [searchName, setSearchName] = useState('');\n  const [preparedCharacters, setPreparedCharacters] = useLocalStorage('preparedCharacters', []);\n  const [characters, setCharacters] = useLocalStorage('characters', []);\n  const [loader, setLoader] = useState(false);\n  const characterName = match.params.characterName;\n\n  const loadCharacters = async() => {\n    const charactersFromServer = await getCharacters();\n\n    setCharacters(charactersFromServer);\n  };\n\n  const UpdateCharacters = async() => {\n    if(preparedCharacters.length === 0) {\n      setLoader(true);\n      const updateCharacters = await Promise.all(characters\n        .map(async character => {\n          const homeworld = await getInfo(character.homeworld);\n          return {\n            ...character, \n            homeworld\n          };    \n        }));\n      setPreparedCharacters(updateCharacters);\n      setLoader(false);\n    }\n  };\n\n\n  useEffect(() => {\n    if(characters.length === 0) {\n      loadCharacters();\n    }\n  }, []);\n\n  useEffect(() => {\n    UpdateCharacters();\n  }, [characters]);\n\n  return (\n    <div className=\"CharactersList\">\n      <input\n        type=\"text\"\n        className=\"search\"\n        placeholder=\"Input character name\"\n        value={searchName}\n        onChange={({target}) => setSearchName(target.value)}\n      >\n      </input>\n      <h2 className=\"CharactersList__title\">Characters:</h2>\n      {loader \n        ? <LoaderExampleText />\n        : (\n          <ul className=\"CharactersList__list\">\n            {preparedCharacters.filter(character => \n              (character.name.toLowerCase()).includes(searchName.toLowerCase()))\n                .map(({name, gender, homeworld, url}) => {\n                  return (\n                  <li\n                    key={url}\n                    className=\"CharactersList__item\"\n                  >\n                    <div>\n                      {`Name: ${name}`}\n                    </div>\n                    <div>\n                      {`Gender: ${gender}`}\n                    </div>\n                    <div>\n                      {`Home World: ${homeworld.name}`}\n                    </div>\n                    <Link\n                      className=\"btn\"\n                      to={`/characters/${name}`}\n                      name={name}\n                    >\n                      Show Details\n                    </Link>\n                  </li>\n              )})}\n          </ul>\n        )}\n      <Route path={`/characters/${characterName}`}>\n        <DetailsCharacters\n          selectedCharacter={preparedCharacters.find(character => character.name === characterName)}\n        />\n      </Route>\n\n    </div>\n  );\n};\n","import { Link, Route } from 'react-router-dom';\nimport FacebookLogin from 'react-facebook-login';\n\nimport { CharactersList } from './components/CharactersList';\n\nimport './App.css';\n\n\n\nconst App = () => {\n  function fbLogoutUser() {\n    //eslint-disable-next-line\n    FB.getLoginStatus(function(response) {\n        if (response && response.status === 'connected') {\n            //eslint-disable-next-line\n            FB.logout(function(response) {\n              console.log('bye')\n              // eslint-disable-next-line no-restricted-globals\n              location.href = \"/star_wars/\";\n            });\n        }\n    });\n  }\n\n  function redirect (){\n    //eslint-disable-next-line\n    FB.getLoginStatus(function(response) {\n      if (response && response.status === 'connected') {\n        // eslint-disable-next-line no-restricted-globals\n        location.href = \"/star_wars/#/home/\";\n      }\n  });\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n          <Route path=\"/home\">\n            <button \n              className=\"btn\"\n              onClick={fbLogoutUser}\n            >\n              Log out\n            </button>\n            <h1 className=\"main_title\">Star Wars</h1>\n            <nav className=\"menu\">\n              <ul>\n                <li>\n                  <Link \n                    to=\"/characters\"\n                    className=\"btn\"\n                  >\n                    Characters\n                  </Link>\n                </li>\n              </ul>\n            </nav>\n          </Route>\n          <Route \n            path=\"/characters/:characterName?\"\n            component={CharactersList}\n          >\n          </Route>\n          <Route path=\"/\" exact>\n          <FacebookLogin\n            appId=\"856885485186770\"\n            autoLoad={true}\n            fields=\"name,email,picture\"\n            callback={redirect} \n          />\n          </Route>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {HashRouter } from 'react-router-dom'\n\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}